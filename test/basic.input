" Common Set-Up  "{{{1

call vspec#hint({'sid': 'smartchr#_sid()'})


" Open a line - to avoid remapping hell.
nnoremap <Plug>(o)  o

" Refresh Vim's internal information on the cursor position.
" Vim doesn't update the information while inserting characters
" noninteractively, e.g., ":normal! i_foo_bar".
" So we have to refresh it explicitly to test smartchr by a script.
inoremap <Plug>(r)  <C-o><C-l>

" Allow backspacing everything.  Because backspacing doesn't work just after
" <Plug>r that starts new Insert mode as a side effect.
set backspace=indent,eol,start




function! s:describe__s_cursor_preceded_with_p()  "{{{1
  It requires the following set up.

  " ^\oo .*r baz$
  "         *
  new
  put ='\oo .*r baz'
  normal! $bh
  Should getline('.') ==# '\oo .*r baz'
  Should col('.') == 8
  Should getline('.')[col('.') - 1] ==# ' '

  It should return true if the cursor is preceded with specified string.

  Should Call('s:cursor_preceded_with_p', '.*r') != 0

  It should return false if the cursor is not preceded with specified string.

  Should Call('s:cursor_preceded_with_p', 'XXX') == 0

  It requires to reset side effect.

  quit!
endfunction




function! s:describe__smartchr_loop()  "{{{1
  inoremap <expr> _  smartchr#loop(' <- ', ' <<< ', '_')
  new

  It should insert ' <- ' for the first time.

  execute 'normal' "\<Plug>(o)_"
  Should getline('.') ==# ' <- '

  It should insert ' <<< ' for the second time.

  execute 'normal' "\<Plug>(o)_\<Plug>(r)_"
  Should getline('.') ==# ' <<< '

  It should insert '_' for the third time.

  execute 'normal' "\<Plug>(o)_\<Plug>(r)_\<Plug>(r)_"
  Should getline('.') ==# '_'

  It should insert '_' for the fourth time.

  execute 'normal' "\<Plug>(o)_\<Plug>(r)_\<Plug>(r)_\<Plug>(r)_"
  Should getline('.') ==# ' <- '

  It should insert ' <- ' for the fourth time.

  execute 'normal' "\<Plug>(o)_\<Plug>(r)_\<Plug>(r)_\<Plug>(r)_\<Plug>(r)_"
  Should getline('.') ==# ' <<< '

  It requires to reset side effect.

  iunmap _
  quit!
endfunction




function! s:describe__smartchr_one_of()  "{{{1
  inoremap <expr> _  smartchr#one_of(' <- ', ' <<< ', '_')
  new

  It should insert ' <- ' for the first time.

  execute 'normal' "\<Plug>(o)_"
  Should getline('.') ==# ' <- '

  It should insert ' <<< ' for the second time.

  execute 'normal' "\<Plug>(o)_\<Plug>(r)_"
  Should getline('.') ==# ' <<< '

  It should insert '_' for the third time.

  execute 'normal' "\<Plug>(o)_\<Plug>(r)_\<Plug>(r)_"
  Should getline('.') ==# '_'

  It should insert ' <- _' for the fourth time.

  execute 'normal' "\<Plug>(o)_\<Plug>(r)_\<Plug>(r)_\<Plug>(r)_"
  Should getline('.') ==# '_ <- '

  It requires to reset side effect.

  iunmap _
  quit!
endfunction




" __END__  "{{{1
" vim: filetype=vim foldmethod=marker
